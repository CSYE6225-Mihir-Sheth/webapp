name: Check Packer Format

on:
  push:
  pull_request:

jobs:
  connect-remote:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0.28
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DATABASE }}
          MYSQL_USER: ${{ secrets.USER }}
          MYSQL_PASSWORD: ${{ secrets.PASSWORD }}
          MYSQL_ROOT_HOST: "%"
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: create and configure
        run: |
          touch .env
          echo port=${{ secrets.PORT }} >> .env
          echo host=${{ secrets.HOST }} >> .env
          echo dialect=${{ secrets.DIALECT }} >> .env
          echo user=${{ secrets.USER }} >> .env
          echo password=${{ secrets.PASSWORD }} >> .env
          echo database=${{ secrets.DATABASE }} >> .env

      - name: Install dependencies
        run: npm install

      - name: Wait for MySQL to become available
        run: sleep 15

      - name: Run tests
        run: npm test

      - name: Set up Packer
        run: |
          wget -O packer.zip https://releases.hashicorp.com/packer/1.7.8/packer_1.7.8_linux_amd64.zip
          unzip packer.zip
          chmod +x packer
          sudo mv packer /usr/local/bin/
          packer version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Run Packer plugin installation
        run: packer init .

      - name: Check Packer template format
        run: packer fmt -check ami-packer.hcl
